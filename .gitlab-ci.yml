image: docker:20.10.16
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG
variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  IMAGE_NAME: "$IMAGE:$TAG"
  DOCKER_IMAGE: "$IMAGE_NAME"
  KANIKO_CACHE_ARGS: ""

stages:
  - build
  - deploy
image:build:release:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "stage-beta"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo APOLLO_URL=$APOLLO_URL >> .env.production
    - echo REACT_APP_APOLLO_URL=$REACT_APP_APOLLO_URL >> .env.production
  script:
    - mkdir -p /kaniko/.docker
    - cat $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile Dockerfile $KANIKO_CACHE_ARGS --destination $IMAGE:$TAG

image:build:tagged:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
      - .next/cache/
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - cat $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile Dockerfile $KANIKO_CACHE_ARGS --destination $IMAGE:$CI_COMMIT_TAG

update:deploy:branch:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stage-beta"'
  variables:
    WEBTAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
    AUTHOR: $CI_COMMIT_AUTHOR
    MESSAGE: $CI_COMMIT_MESSAGE
  stage: deploy
  trigger:
    project: digg/deploy-dataportal
    branch: main

update:deploy:tag:
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    WEBTAG: $CI_COMMIT_TAG
    AUTHOR: $CI_COMMIT_AUTHOR
    MESSAGE: $CI_COMMIT_MESSAGE
  stage: deploy
  trigger:
    project: digg/deploy-dataportal
    branch: main
